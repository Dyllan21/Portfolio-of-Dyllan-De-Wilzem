import math
import random
import pygame
from pygame import mixer, Surface, SurfaceType

# Intailize the pygame
pygame.init()

# create the screen
screen_width = 800
screen_height = 600
screen = pygame.display.set_mode((screen_width,screen_height))

# Caption and icon
pygame.display.set_caption("Space Invader")
icon = pygame.image.load('enemy-spaceship-sprite-11562897082efa3h4ejq2.png')
pygame.display.set_icon(icon)

# Score
score_val = 0
scoreX = 5
scoreY = 5
font = pygame.font.Font('freesansbold.ttf', 20)

# Game Over
game_over_font = pygame.font.Font('freesansbold.ttf', 64)

def show_score(x, y):
    score = font.render("Points: " + str(score_val), True, (255,255,255))
    screen.blit(score, (x, y))

def game_over():
    game_over_text = game_over_font.render("GAME OVER", True, (255,255,255))
    screen.blit(game_over_text, (190,250))

# Sound
mixer.music.load("the-next-level-retro-chiptune-dance-instrumental-pace-invaders-137339.mp3")
mixer.music.play(-1)

# Player
playerImg = pygame.image.load('Spacecraft.jpg')
playerX = 370
playerY = 380
playerX_change = 0

# Enemy
enemyImg = []
enemyX = []
enemyY = []
enemyX_change = []
enemyY_change = []
num_of_enemies = 6

for i in range(num_of_enemies):
    enemyImg.append(pygame.image.load('enemy-spaceship-sprite-11562897082efa3h4ejq2.png'))
    enemyX.append(random.randint(0,736))
    enemyY.append(random.randint(50,150))
    enemyX_change.append(4)
    enemyY_change.append(40)

# Bullet
# Ready - You can't see the bullet on the screen
# Fire - The bullet is currently moving
bulletImg = pygame.image.load('Bullet missile.png')
bulletX = 0
bulletY = 380
bulletX_change = 0
bulletY_change = 10
bullet_state = "ready"

# Collision
def isCollision(enemyX, enemyY, bulletX, bulletY):
    distance = math.sqrt(math.pow(enemyX - bulletX, 2) + (math.pow(enemyY - bulletY, 2)))
    if distance <27:
        return True
    else:
        return False
def player(x, y):
    screen.blit(playerImg, (x - 16, y + 10))

def enemy(x, y, i):
    screen.blit(enemyImg[i], (x, y))

def bullet(x, y):
    global bullet_state
    screen.blit(bulletImg, (x, y))
    bullet_state = "fire"

# Game loop
running = True
while running:
    # RGB
    screen.fill((0, 0, 0))
    for event in pygame.event.get():
        if event.type == pygame.Quit:
            running = False
        # Controlling the player movement
        # from the arrow keys
        if event.type == pygame.Keydown:
            if event.key == pygame.K_LEFT:
                playerX_change = 1.7
            if event.key == pygame.K_RIGHT:
                playerX_change = 1.7
            if event.key == pygame.K_SPACE:

                # Fixing the change of direction of bullet
                if bullet_state == "rest":
                    bullet_X = playerX
                    bullet(bullet_X, bulletY)
                    bulletSound = mixer.Sound("laser.wav")
                    bulletsound.play()
        if event.type == pygame.KEYUP:
            playerX_change = 0

    # Adding the change in the player position
    playerX += playerX_change
    for i in range(num_of_enemies):
        enemyY -= bulletY_change

    # bullet movement
    if bulletY <= 0:
        bulletY = 600
        bullet_state = "rest"
    if bullet_state is "fire":
        bullet(bulletX, bulletY)
        bulletY -= bulletY_change

    # movement of the enemy
    for i in range(num_of_enemies):

        if enemyY[i] >= 450:
            if abs(playerX-enemyX[i]) < 80:
                for j in range(num_of_enemies):
                    enemyY[j] = 2000
                    explosionSound = mixer.Sound("mixkit-arcade-space-shooter-dead-notification-272.wav")
                    explosionSound.play()
                game_over()
                break
        if enemyX[i] >= 735 or enemyX[i] <= 0:
            enemyX_change[i] *= -1
            enemyY[i] += enemyY_change[i]
        # Collision
        collision = isCollision(enemyX[i], enemyY[i], bulletX, bulletY)

        if collision:
            score_val += 1
            bulletY = 600
            bullet_state = "rest"
            enemyX[i] = random.randint(64, 736)
            enemyY[i] = random.randint(30, 200)
            enemyX_change[i] *= -1

        enemy(enemyX[i], enemyY[i], i)

    # restricting the spaceship so that it doesn't go out of screen
    if playerX <= 16:
        playerX = 16
    elif playerX >= 750:
        playerX = 750

    player(playerX, playerY)
    show_score(scoreX, scoreY)
    pygame.display.update()








